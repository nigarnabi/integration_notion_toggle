
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL") // optional with Neon for migrations
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  name      String?
  image     String?
    emailVerified DateTime?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Toggle fields 
  toggleApiKeyEnc String?
  togglLastVerifiedAt DateTime?


   // Stripe fields
  stripeCustomerId String?  @unique
  stripeSubId      String?  @unique
  plan             String?
  subStatus        String?
    accounts Account[]
  sessions Session[]
}
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
